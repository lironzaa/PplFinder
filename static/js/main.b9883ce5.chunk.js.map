{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","services/favoriteService.js","pages/Home/Home.js","hooks/usePeopleFetch.js","constant.js","components/Button/Button.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","component","Spinner","color","thickness","variant","CircularProgress","CheckBox","onChange","label","value","FormControlLabel","control","Checkbox","event","target","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","isFavoritesList","removeFavorite","toggleFavorite","isOnFavorites","updatePageNumber","useState","hoveredUserId","setHoveredUserId","filteredUsers","setFilteredUsers","filteredCountries","setFilteredCountries","useEffect","length","filter","user","indexOf","location","country","handleMouseLeave","onCheckboxClicked","selectedCountry","isChecked","onScroll","isBottomPage","scrollHeight","scrollTop","clientHeight","map","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","login","uuid","IconButton","onClick","Home","Content","Header","favorites","loadFromStorage","saveToStorage","key","val","localStorage","setItem","JSON","stringify","parse","getItem","favoriteService","getFavorites","some","favoriteUser","userId","clearFavorites","setUsers","setIsLoading","pageNumber","setPageNumber","fetchUsers","a","axios","get","response","data","results","usePeopleFetch","setFavorites","selectedUser","selectedUserId","SIZE","VARIANT","COLORS","Button","C","disabled","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","allTabs","history","useHistory","pathname","includes","handleChange","_e","selectedTab","AppBar","position","style","top","Tabs","indicatorColor","textColor","Tab","Link","to","AppRouter","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b9883ce5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography component={'span'}>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ onChange, label, value }) => {\r\n  const handleChange = event => {\r\n    onChange && onChange(value, event.target.checked);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserList = ({\r\n                    users,\r\n                    isLoading,\r\n                    isFavoritesList,\r\n                    removeFavorite,\r\n                    toggleFavorite,\r\n                    isOnFavorites,\r\n                    updatePageNumber\r\n                  }) => {\r\n  const [ hoveredUserId, setHoveredUserId ] = useState();\r\n  const [ filteredUsers, setFilteredUsers ] = useState([]);\r\n  const [ filteredCountries, setFilteredCountries ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!filteredCountries.length) setFilteredUsers([ ...users ]);\r\n    else setFilteredUsers(users.filter(user => filteredCountries.indexOf(user.location.country) !== -1));\r\n  }, [ filteredCountries, users ]);\r\n\r\n  const handleMouseEnter = index => setHoveredUserId(index);\r\n\r\n  const handleMouseLeave = () => setHoveredUserId();\r\n\r\n  const onCheckboxClicked = (selectedCountry, isChecked) => {\r\n    if (isChecked) setFilteredCountries([ ...filteredCountries, selectedCountry ]);\r\n    else setFilteredCountries(filteredCountries => filteredCountries.filter(country => country !== selectedCountry));\r\n  };\r\n\r\n  const handleScroll = event => {\r\n    let isBottomPage = event.target.scrollHeight - event.target.scrollTop === event.target.clientHeight;\r\n    if (!isFavoritesList && isBottomPage && !filteredCountries.length) updatePageNumber();\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox onChange={onCheckboxClicked} value=\"Brazil\" label=\"Brazil\" />\r\n        <CheckBox onChange={onCheckboxClicked} value=\"Australia\" label=\"Australia\" />\r\n        <CheckBox onChange={onCheckboxClicked} value=\"Canada\" label=\"Canada\" />\r\n        <CheckBox onChange={onCheckboxClicked} value=\"Germany\" label=\"Germany\" />\r\n        <CheckBox onChange={onCheckboxClicked} value=\"France\" label=\"France\" />\r\n      </S.Filters>\r\n      <S.List onScroll={handleScroll}>\r\n        {filteredUsers.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}>\r\n              <S.UserPicture src={user?.picture.large} alt=\"user-picture\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper\r\n                isVisible={!isFavoritesList ? index === hoveredUserId || isOnFavorites(user.login.uuid) : isFavoritesList}>\r\n                <IconButton onClick={() => !isFavoritesList ? toggleFavorite(user) : removeFavorite(user.login.uuid)}>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","let favorites = loadFromStorage(\"favorites\") ? loadFromStorage(\"favorites\") : [];\r\n\r\nfunction getFavorites() {\r\n  return [ ...favorites ];\r\n}\r\n\r\nfunction toggleFavorite(user) {\r\n  if (favorites.some(favoriteUser => favoriteUser.login.uuid === user.login.uuid)) favorites = favorites.filter(favoriteUser => favoriteUser.login.uuid !== user.login.uuid);\r\n  else favorites = [ ...favorites, user ];\r\n  saveToStorage(\"favorites\", favorites);\r\n  return favorites;\r\n}\r\n\r\nfunction removeFavorite(userId) {\r\n  favorites = favorites.filter(favoriteUser => favoriteUser.login.uuid !== userId);\r\n  saveToStorage(\"favorites\", favorites);\r\n  return favorites;\r\n}\r\n\r\nfunction clearFavorites() {\r\n  saveToStorage(\"favorites\", favorites = []);\r\n  return favorites;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n  localStorage.setItem(key, JSON.stringify(val));\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nexport const favoriteService = {\r\n  getFavorites,\r\n  toggleFavorite,\r\n  removeFavorite,\r\n  clearFavorites\r\n};","import React, { useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\nimport { favoriteService } from \"../../services/favoriteService\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading, updatePageNumber } = usePeopleFetch();\r\n  const [ favorites, setFavorites ] = useState([]);\r\n\r\n  const toggleFavorite = selectedUser => setFavorites(favoriteService.toggleFavorite(selectedUser));\r\n\r\n  const isOnFavorites = selectedUserId => favorites.some(favoriteUser => favoriteUser.login.uuid === selectedUserId);\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} isFavoritesList={false}\r\n                  toggleFavorite={toggleFavorite} isOnFavorites={isOnFavorites} updatePageNumber={updatePageNumber} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [ users, setUsers ] = useState([]);\r\n  const [ isLoading, setIsLoading ] = useState(false);\r\n  const [ pageNumber, setPageNumber ] = useState(1);\r\n\r\n  const updatePageNumber = () => setPageNumber(pageNumber + 1);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [ pageNumber ]);\r\n\r\n  async function fetchUsers() {\r\n    if (isLoading) return;\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=${pageNumber}`);\r\n    setIsLoading(false);\r\n    setUsers([ ...users, ...response.data.results ]);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers, updatePageNumber };\r\n};\r\n","export const SIZE = {\r\n  small: \"small\",\r\n  medium: \"medium\",\r\n  large: \"large\"\r\n};\r\n\r\nexport const VARIANT = {\r\n  text: \"text\",\r\n  outlined: \"outlined\",\r\n  contained: \"contained\"\r\n};\r\n\r\nexport const COLORS = {\r\n  default: \"default\",\r\n  inherit: \"inherit\",\r\n  primary: \"primary\",\r\n  secondary: \"secondary\"\r\n};\r\n","import React from \"react\";\r\nimport { Button as MuiButton } from \"@material-ui/core\";\r\nimport * as C from \"constant\";\r\n\r\nconst Button = ({\r\n                  label,\r\n                  color = C.COLORS.default,\r\n                  disabled,\r\n                  size = C.SIZE.medium,\r\n                  variant = C.VARIANT.contained,\r\n                  onClick\r\n                }) => {\r\n\r\n  const onButtonClicked = () => onClick();\r\n\r\n  return (\r\n    <MuiButton\r\n      onClick={onButtonClicked}\r\n      color={color}\r\n      disabled={disabled}\r\n      size={size}\r\n      variant={variant}\r\n    >\r\n      {label}\r\n    </MuiButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Button from \"components/Button\";\r\nimport * as S from \"./style\";\r\nimport { favoriteService } from \"../../services/favoriteService\";\r\nimport UserList from \"../../components/UserList\";\r\n\r\nconst Favorites = () => {\r\n  const [ favorites, setFavorites ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFavorites(favoriteService.getFavorites());\r\n  }, []);\r\n\r\n  const removeFavorite = userId => setFavorites(favoriteService.removeFavorite(userId));\r\n\r\n  const clearFavorites = () => setFavorites(favoriteService.clearFavorites());\r\n\r\n  return (\r\n    <S.Favorites>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Favorites\r\n          </Text>\r\n        </S.Header>\r\n        <div>\r\n          <Button onClick={clearFavorites} label={\"Clear Favorites\"} color={\"primary\"}\r\n                  size={\"large\"}>Click</Button>\r\n        </div>\r\n        <UserList users={favorites} isLoading={false} isFavoritesList={true} removeFavorite={removeFavorite} />\r\n      </S.Content>\r\n    </S.Favorites>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\"\r\n      }\r\n    }\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\"\r\n          },\r\n          error: {\r\n            main: \"#f06292\"\r\n          }\r\n        }\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Route, useHistory } from \"react-router\";\r\n\r\nconst NavBar = () => {\r\n  const [ value, setValue ] = useState(0);\r\n  const allTabs = [ \"/\", \"/favorites\" ];\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (history.location.pathname.includes(\"favorites\")) handleChange(null, 1);\r\n  }, []);\r\n\r\n  const handleChange = (_e, selectedTab) => setValue(selectedTab);\r\n\r\n  return (\r\n    <Route>\r\n      <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"Navigation\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\">\r\n          <Tab label=\"Home\" index={0} component={Link} to={allTabs[0]} />\r\n          <Tab label=\"Favorites\" index={1} component={Link} to={allTabs[1]} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}